version: 2.1

orbs:
  browser-tools: circleci/browser-tools@2.3.0
  aws-cli: circleci/aws-cli@5.4.1

settings: &settings
  shell: /bin/bash --login
  docker:
    - image: cimg/node:20.18.3-browsers
  working_directory: ~/project

package-cache: &package-cache
  key: package-cache-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}

jobs:
  build-and-test:
    <<: *settings
    steps:
      - checkout
      - restore_cache:
          <<: *package-cache
      - run:
          name: Install project dependencies
          command: |
            npm ci --loglevel verbose
      - browser-tools/install_chrome
      - browser-tools/install_chromedriver
      - run:
          name: Check browser tools install
          command: |
            google-chrome --version
            chromedriver --version
      - save_cache:
          <<: *package-cache
          paths:
            - node_modules
      - run:
          name: Run automated tests
          command: |
            npm run test:ci
      - persist_to_workspace:
          root: ~/
          paths:
            - 'project'

  deploy-to-staging:
    <<: *settings
    steps:
      - checkout
      - restore_cache:
          <<: *package-cache
      - run:
          name: Install project dependencies
          command: |
            npm ci --loglevel verbose
      - run:
          name: Build project
          command: |
            npm run build
      - aws-cli/install
      - run:
          name: Upload to S3
          command: |
            aws s3 sync dist/THIRD-IRON-LIBKEY s3://$AWS_BUCKET/primo-nde/staging \
              --delete \
              --cache-control "max-age=31536000,public" \
              --exclude "*.html" \
              --exclude "*.json"
      - run:
          name: Upload HTML files with no-cache
          command: |
            aws s3 sync dist/THIRD-IRON-LIBKEY s3://$AWS_BUCKET/primo-nde/staging \
              --delete \
              --cache-control "no-cache,no-store,must-revalidate" \
              --include "*.html" \
              --include "*.json"

  deploy-to-production:
    <<: *settings
    steps:
      - checkout
      - restore_cache:
          <<: *package-cache
      - run:
          name: Install project dependencies
          command: |
            npm ci --loglevel verbose
      - run:
          name: Build project
          command: |
            npm run build
      - aws-cli/install
      - run:
          name: Upload to S3
          command: |
            aws s3 sync dist/THIRD-IRON-LIBKEY s3://$AWS_BUCKET/primo-nde/production \
              --delete \
              --cache-control "max-age=31536000,public" \
              --exclude "*.html" \
              --exclude "*.json"
      - run:
          name: Upload HTML files with no-cache
          command: |
            aws s3 sync dist/THIRD-IRON-LIBKEY s3://$AWS_BUCKET/primo-nde/production \
              --delete \
              --cache-control "no-cache,no-store,must-revalidate" \
              --include "*.html" \
              --include "*.json"

  renogen:
    docker:
      - image: cimg/node:18.16.1
    steps:
      - add_ssh_keys
      - run:
          name: create ssh directory
          command: mkdir ~/.ssh/
      - run:
          name: add github.com to known_hosts
          command: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Clone release_notes_generator repository
          command: git clone git@github.com:thirdiron/release_notes_generator.git .
      - run:
          name: Install release_notes_generator dependencies
          command: npm ci
      - run:
          name: Build release_notes_generator
          command: npm run build
      - run:
          name: Generate release notes
          command: DEPLOY_BRANCH_NAME='main' npm run start -- primo-nde-discovery-service-adapter

workflows:
  build-test-deploy:
    jobs:
      # - deploy-hotfix:
      #     requires:
      #       - build-and-test
      #     filters:
      #       branches:
      #         only: /hotfix\/.*/
      # - deploy-feature:
      #     requires:
      #       - build-and-test
      #     filters:
      #       branches:
      #         only: /feature\/.*/
      - build-and-test
      - deploy-to-staging:
          requires:
            - build-and-test
          filters:
            branches:
              only: develop
      - deploy-to-production:
          requires:
            - build-and-test
          filters:
            branches:
              only: main
      - renogen:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - develop
# experimental:
#   notify:
#     branches:
#       only:
#         - main
#         - develop
